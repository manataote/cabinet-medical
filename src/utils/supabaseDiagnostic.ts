export const diagnoseSupabaseConnection = async () => {
  const results: string[] = [];
  
  try {
    results.push('üîç === DIAGNOSTIC SUPABASE APPROFONDI ===');
    
    // Test 1: V√©rification de l'URL directement
    results.push('1Ô∏è‚É£ Test URL directe...');
    try {
      const response = await fetch('https://qxcoqqwedvqhsxhkkuda.supabase.co', {
        method: 'HEAD',
        mode: 'no-cors',
        cache: 'no-cache'
      });
      results.push('‚úÖ URL r√©pond (no-cors)');
    } catch (err: any) {
      results.push(`‚ùå URL ne r√©pond pas: ${err.message}`);
    }
    
    // Test 2: Test avec CORS
    results.push('2Ô∏è‚É£ Test avec CORS...');
    try {
      const response = await fetch('https://qxcoqqwedvqhsxhkkuda.supabase.co', {
        method: 'HEAD',
        cache: 'no-cache'
      });
      results.push(`‚úÖ CORS OK - Status: ${response.status}`);
    } catch (err: any) {
      results.push(`‚ùå CORS KO: ${err.message}`);
    }
    
    // Test 3: Test de l'API REST Supabase
    results.push('3Ô∏è‚É£ Test API REST...');
    try {
      const response = await fetch('https://qxcoqqwedvqhsxhkkuda.supabase.co/rest/v1/', {
        method: 'GET',
        headers: {
          'apikey': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InF4Y29xcXdlZHZxaHN4aGtrdWRhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTkxMDk2MTgsImV4cCI6MjA3NDY4NTYxOH0.G-FhlZ2lBOvhcTTYH-FIN_ZLikPAMVAIcvWc-xv_KqU',
          'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InF4Y29xcXdlZHZxaHN4aGtrdWRhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTkxMDk2MTgsImV4cCI6MjA3NDY4NTYxOH0.G-FhlZ2lBOvhcTTYH-FIN_ZLikPAMVAIcvWc-xv_KqU'
        },
        cache: 'no-cache'
      });
      
      if (response.ok) {
        results.push(`‚úÖ API REST accessible - Status: ${response.status}`);
      } else {
        results.push(`‚ö†Ô∏è API REST r√©pond mais erreur - Status: ${response.status}`);
        const text = await response.text();
        results.push(`üìã R√©ponse: ${text.substring(0, 200)}`);
      }
    } catch (err: any) {
      results.push(`‚ùå API REST KO: ${err.message}`);
    }
    
    // Test 4: Test de l'Auth API
    results.push('4Ô∏è‚É£ Test Auth API...');
    try {
      const response = await fetch('https://qxcoqqwedvqhsxhkkuda.supabase.co/auth/v1/settings', {
        method: 'GET',
        headers: {
          'apikey': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InF4Y29xcXdlZHZxaHN4aGtrdWRhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTkxMDk2MTgsImV4cCI6MjA3NDY4NTYxOH0.G-FhlZ2lBOvhcTTYH-FIN_ZLikPAMVAIcvWc-xv_KqU'
        },
        cache: 'no-cache'
      });
      
      if (response.ok) {
        results.push(`‚úÖ Auth API accessible - Status: ${response.status}`);
      } else {
        results.push(`‚ö†Ô∏è Auth API erreur - Status: ${response.status}`);
      }
    } catch (err: any) {
      results.push(`‚ùå Auth API KO: ${err.message}`);
    }
    
    // Test 5: V√©rification DNS
    results.push('5Ô∏è‚É£ Test DNS...');
    try {
      // Test avec une requ√™te simple
      const response = await fetch('https://httpbin.org/get', {
        method: 'GET',
        cache: 'no-cache'
      });
      
      if (response.ok) {
        results.push('‚úÖ DNS g√©n√©ral fonctionne');
      }
    } catch (err: any) {
      results.push(`‚ùå DNS g√©n√©ral KO: ${err.message}`);
    }
    
    results.push('üèÅ === DIAGNOSTIC TERMIN√â ===');
    
  } catch (err: any) {
    results.push(`‚ùå Erreur g√©n√©rale: ${err.message}`);
  }
  
  return results;
};

